void class updateaccount implements 
    Database.Batchable<sObject>, Database.Stateful {
    
    global Integer recordsProcessed = 0;
    global Database.QueryLocator start(Database.BatchableContext bc) {
        return Database.getQueryLocator(
            'SELECT ID, BillingStreet, BillingCity, BillingState, ' +
            'BillingPostalCode, (SELECT ID, MailingStreet, MailingCity, ' +
            'MailingState, MailingPostalCode FROM Contacts) FROM Account ' + 
            'Where BillingCountry = \'US\' && (BillingState = New york || BillingState = Chicago) ' 
        );
    }
	
        global void execute(Database.BatchableContext bc, List<Account> scope){
        List<Contact> contacts = new List<Contact>();
        for (Account account : scope) {
            for (Contact contact : account.contacts) {
                contact.MailingStreet = account.BillingStreet;
                contact.MailingCity = account.BillingCity;
                contact.MailingState = account.BillingState;
                contact.MailingPostalCode = account.BillingPostalCode;
                contacts.add(contact);
           recordsProcessed = recordsProcessed + 1;
            }
        }
            
        update contacts;
            try {
    insert accts;        
   
    accountToUpdate = 
        [SELECT BillingState FROM Account
         WHERE Name=Account.Billingstate  AND BillingState ='New york' or Name=Account.Billingstate  AND BillingState ='Chicago'
         LIMIT 1];
    // Update the billing city.
    accountToUpdate.BillingCity = 'New York';
                			 = 'chicago ;
    // Make the update call.
    update accountToUpdate;
} catch(DmlException e) {
    System.debug('An unexpected error has occurred: ' + e.getMessage());
}
 
// Verify that the billing city was updated to New York and chicago
Account afterUpdate = 
    [SELECT BillingState FROM Account WHERE Id=:Account.Billingstate.Id];
System.assertEquals('New York', 'chicago', afterUpdate.Billingstate);
    }